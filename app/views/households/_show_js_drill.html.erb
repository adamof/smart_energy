<%= javascript_tag do %>
  function setChart(drilldown, type, pointClick, yAxis) {
    if(pointClick){
      chart.setTitle({
        text: drilldown.chart_name
      });
      chart.xAxis[0].setCategories(drilldown.categories);
      chart.series[0].remove();
      $(".totals#date").html(drilldown.chart_name);
      $.each(drilldown.totals, function(property, value) {
        $(".totals#"+property).html(value);        
      });
    }
    chart.yAxis[yAxis].setTitle({text: drilldown.units});

    chart.addSeries({
      name: drilldown.series_name,
      data: drilldown.data,
      level: drilldown.level,
      color: drilldown.color,
      type: type,
      yAxis: yAxis,
      dataLabels: {
        enabled: false,
        color: drilldown.color
      }
    });
  }

  function writePeriod (drilldown) {
    $(".period-shown #unit").val(drilldown.unit);
    $(".period-shown #date").val(drilldown.date);
    $(".period-shown #type").val(drilldown.type);
  }

  function writeTotals(totals) {
    $(".totals#date").html(totals.energy_cost);
  }

  function changeType(series, newType) {
    var dataArray = [],
        points = series.data;
    series.chart.addSeries({
      type: newType,
      name: series.name,
      color: series.color,
      data: series.options.data,
      pointInterval: series.pointInterval,
      pointStart: series.xData[0]
    }, false);
    
    series.remove();
  }

  $(function(){
    chartType = "<%= current_user.try(:chart_type) || 'column' %>";

    $('#chart_type').change(function() {
      chartType = $(this).val();
      for(i = 0, l = chart.series.length; i < l; ++i) {
        var series = window.chart.series[0],
            newType = chartType;
        changeType(series, newType);
      }
    });

    $(".chart-toggler").change(function() {
      var axis = this.value,
          axis_n = parseInt($(this).attr("axis_n")),
          color = $(this).attr("color"),
          type = $(this).attr("series_type");

      if(this.checked){
        $.getJSON("<%= readings_household_path %>", 
          { date: $(".period-shown #date").val(),
            unit: $(".period-shown #unit").val(),
            type: $(".period-shown #type").val(),
            axis: axis,
            all: false,
            id: <%= @household.id %> },
          function (result) {
            setChart(result, type, false, axis_n);
          }
        );
      }else{
        chart.yAxis[axis_n].series[0].destroy();
      }
    });

    $(".comparison_toggler").change(function () {
      if(this.checked){
        var date = new Date($(".period-shown #date").val());
        date.setMonth(date.getMonth() - 12);
        $.getJSON("<%= readings_household_path %>",  
          { date: date.toISOString().slice(0,10),
            unit: $(".period-shown #unit").val(),
            type: $(".period-shown #type").val(),
            axis: "energy_cost",
            all: true,
            id: <%= @household.id %> },
          function (result) {
            result["color"] = "#800080";
            setChart(result, "column", false, 0);
          }
        );
      }else{
        chart.yAxis[0].series[1].destroy();
      }
    });

    var colors = Highcharts.getOptions().colors;
        // chartTitle = 'Yearly <%= @type %> usage',
        // categories = <%= raw @data[:categories] %>,
        // name = '<%= raw @data[:name] %>',
        // level = <%= raw @data[:level] %>,
        // data = <%= raw @data[:data].to_json %>;
   
    chart = new Highcharts.Chart({
      chart: {
        renderTo: 'chart_container',
        type: chartType
      },
      // title: {
        // text: "Usage"
      // },
      subtitle: {
        text: 'Click on a column to view monthly usage. Click again to view daily usage.'
      },
      xAxis: {
        labels: {
          rotation: -45,
          align: "right",
          style: {
            fontSize: "13px",
            fontFamily: "Verdana, sans-serif"
          }
        },
        // gridLineColor: "#bfbfc0",
        // gridLineDashStyle: "ShortDash",
        // gridLineWidth: "1",
        // categories: categories                
      },
      yAxis: [
        {
          type: "column",
          title: {
            text: "<%= raw @data[:units] %>",
            style: {
              color: '#4572A7'
            }
          },
          labels: {
            style: {
              color: '#4572A7'
            }
          }
        },
        {
          title: {
            text: "Carbon generated",
            style: {
              color: '#89A54E'
            }
          },
          min: -200,
          labels: {
            style: {
              color: '#89A54E'
            }
          },
          opposite: true,
          showEmpty: false
        },
        {
          plotOptions: {
            type: "spline"
          },
          title: {
            text: "Carbon intensity",
            style: {
              color: '#AA4643'
            }
          },
          min: -200,
          labels: {
            style: {
              color: '#AA4643'
            }
          },
          opposite: true,
          showEmpty: false
        }
      ],
      plotOptions: {
        series: {
          cursor: 'pointer',
          point: {
            events: {
              click: function() {
                writePeriod(this);
                // TODO check to see which toggles we have on
                // so that I can load them as well maybe in a single call?
                $.getJSON("<%= readings_household_path %>", 
                  { date: this.date,
                    unit: this.unit,
                    type: this.type,
                    axis: this.axis,
                    all: true,
                    id: <%= @household.id %> }, 
                  function(drilldown) {
                    setChart(drilldown, chartType, true, 0);
                  }
                );
              }
            }
          },
          marker: {
            symbol: "circle"
          },
          dataLabels: {
            // enabled: true,
            // color: colors[0],
            // style: {
            //    fontWeight: 'bold'
            // },
            formatter: function() {
              return this.y;
            }
            // rotation: -60
          }               
        }
      },
      tooltip: {
        formatter: function() {
          var point = this.point;
          s = '<b>' + point.category + '</b> <br/>';

          if(point.results){
            s +=  "Cost: " + point.y + " " + point.series.yAxis.axisTitle.text + ' <br/>';
            s += "Usage: " + point.results.amount.join(" ") + ' <br/>';
            // s += "Carbon intensity: " + point.results.carbon_intensity.join(" ") + ' <br/>';
            s += "CO2 generated: " + point.results.carbon_result.join(" ") + ' <br/>';
          }else{
            s += point.series.name + ": " + point.y + " " + point.series.yAxis.axisTitle.text;
          }

          return s;
        }
      },
      series: [{}],
      exporting: {
        enabled: false
      }
    });

    $.getJSON("<%= readings_household_path %>", 
      { date: "<%= @date %>",
        unit: "<%= @unit %>",
        type: "<%= @type %>",
        axis: "<%= @axis %>",
        all: true,
        id: <%= @household.id %> }, 
      function(drilldown) {
        setChart(drilldown, chartType, true, 0);
      }
    );
  });
<% end %>