<%= javascript_tag do %>
  function setChart(drilldown, type, pointClick, yAxis) {
    if(pointClick){
      chart.setTitle({
        text: drilldown.chart_name
      });
      chart.xAxis[0].setCategories(drilldown.categories);
      chart.series[0].remove();
      $(".totals#date").html(drilldown.chart_name);
      $.each(drilldown.totals, function(property, value) {
        $(".totals#"+property).html(value);        
      });
    }
    chart.yAxis[yAxis].setTitle({text: drilldown.units});

    chart.addSeries({
      name: drilldown.series_name,
      data: drilldown.data,
      level: drilldown.level,
      color: drilldown.color,
      type: type,
      yAxis: yAxis,
      dataLabels: {
        enabled: false,
        color: drilldown.color
      }
    });
  }

  function init_graph() {
    $.getJSON("<%= readings_household_path %>", 
      { date: "<%= @date %>",
        unit: "<%= @unit %>",
        type: "<%= @type %>",
        axis: "<%= @axis %>",
        all: true,
        id: <%= @household.id %> }, 
      function(drilldown) {
        setChart(drilldown, chartType, true, 0);
      }
    );
    $("#comparison_container").slideUp("slow");
  }
  function writePeriod (drilldown) {
    $(".period-shown #unit").val(drilldown.unit);
    $(".period-shown #date").val(drilldown.date);
    $(".period-shown #type").val(drilldown.type);
    $("label#last_period span").text("Previous " + drilldown.unit);
    if($("#unit").val()=="all")
      $("#comparison_container").slideUp("slow");
    else
      $("#comparison_container").slideDown("slow");
  }

  function changeType(series, newType) {
    var dataArray = [],
        points = series.data;
    series.chart.addSeries({
      type: newType,
      name: series.name,
      color: series.color,
      data: series.options.data,
      pointInterval: series.pointInterval,
      pointStart: series.xData[0]
    }, false);
    
    series.remove();
  }

  function previous_period() {
    var date = new Date($(".period-shown #date").val()),
        unit = $("#unit").val();

    if(unit=="year")
      date.setMonth(date.getMonth() - 12);
    else
      if(unit=="month")
        date.setMonth(date.getMonth() - 1);
      else
        date.setDate(date.getDate() - 1);

    return date.toISOString().slice(0,10)
  }

  function disableAxes() {
    var toggler = $("input#last_period");
    if (toggler.is(":checked")){
      chart.yAxis[0].series[1].destroy();
      toggler.attr("checked", false);
    }
    while(chart.series.length > 1)
      chart.series[1].remove(true);
  }

  function enableAxes() {
    $.each($(".chart-toggler"), function(index, value) {
      if(value.checked)
        toggleAxis(value, false);
    });
  }

  function toggleAxis(toggler,click) {
    var axis = toggler.value,
        axis_n = parseInt($(toggler).attr("axis_n")),
        color = $(toggler).attr("color"),
        type = $(toggler).attr("series_type");

    if(toggler.checked){
      $.getJSON("<%= readings_household_path %>", 
        { date: $(".period-shown #date").val(),
          unit: $(".period-shown #unit").val(),
          type: $(".period-shown #type").val(),
          axis: axis,
          all: false,
          id: <%= @household.id %> },
        function (result) {
          setChart(result, type, false, axis_n);
        }
      );
    }else{
      chart.yAxis[axis_n].series[0].destroy();
      if(click)
        chart.yAxis[axis_n].destroy();
    }
  }

  function drilldown(point) {
    $.getJSON("<%= readings_household_path %>", 
      { date: point.date,
        unit: point.unit,
        type: point.type,
        axis: point.axis,
        all: true,
        id: <%= @household.id %> }, 
      function(result) {
        setChart(result, chartType, true, 0);
      }
    );    
  }

  $(function(){
    chartType = "<%= current_user.try(:chart_type) || 'column' %>";

    $("#reset_graph").click(function() {
      disableAxes();
      init_graph();
      $(".chart-toggler").attr("checked", false);
    })

    $('#chart_type').change(function() {
      chartType = $(this).val();
      for(i = 0, l = chart.series.length; i < l; ++i) {
        var series = window.chart.series[0],
            newType = chartType;
        changeType(series, newType);
      }
    });

    $(".chart-toggler").change(function() {
      toggleAxis(this, true);
    });

    $(".comparison_toggler").change(function () {
      if(this.checked){
        $.getJSON("<%= readings_household_path %>",  
          { date: previous_period,
            unit: $(".period-shown #unit").val(),
            type: $(".period-shown #type").val(),
            axis: "energy_cost",
            all: true,
            id: <%= @household.id %> },
          function (result) {
            result["color"] = "#800080";
            setChart(result, "column", false, 0);
          }
        );
      }else{
        chart.yAxis[0].series[1].destroy();
      }
    });

    var colors = Highcharts.getOptions().colors;
    var main_axes = {},
        extra_axes = {};
   
    chart = new Highcharts.Chart({
      chart: {
        renderTo: 'chart_container',
        type: chartType
      },
      subtitle: {
        text: 'Click on a column to view monthly usage. Click again to view daily usage.'
      },
      xAxis: {
        labels: {
          rotation: -45,
          align: "right",
          style: {
            fontSize: "13px",
            fontFamily: "Verdana, sans-serif"
          }
        },
      },
      yAxis: [
        {
          type: "column",
          title: {
            text: "<%= raw @data[:units] %>",
            style: {
              color: '#4572A7'
            }
          },
          labels: {
            style: {
              color: '#4572A7'
            }
          }
        },
        {
          title: {
            text: "Carbon generated",
            style: {
              color: '#89A54E'
            }
          },
          min: -200,
          labels: {
            style: {
              color: '#89A54E'
            }
          },
          opposite: true,
          showEmpty: false
        },
        {
          plotOptions: {
            type: "spline"
          },
          title: {
            text: "Carbon intensity",
            style: {
              color: '#AA4643'
            }
          },
          min: -200,
          labels: {
            style: {
              color: '#AA4643'
            }
          },
          opposite: true,
          showEmpty: false
        }
      ],
      plotOptions: {
        series: {
          cursor: 'pointer',
          point: {
            events: {
              click: function() {
                writePeriod(this);
                disableAxes();
                drilldown(this);
                enableAxes();
              }
            }
          },
          marker: {
            symbol: "circle"
          },
          dataLabels: {
            // enabled: true,
            // color: colors[0],
            // style: {
            //    fontWeight: 'bold'
            // },
            formatter: function() {
              return this.y;
            }
            // rotation: -60
          }               
        }
      },
      tooltip: {
        formatter: function() {
          var point = this.point;
          s = '<b>' + point.category + '</b> <br/>';

          if(point.results){
            s +=  "Cost: " + point.y + " " + point.series.yAxis.axisTitle.text + ' <br/>';
            s += "Usage: " + point.results.amount.join(" ") + ' <br/>';
            s += "CO2 generated: " + point.results.carbon_result.join(" ") + ' <br/>';
          }else{
            s += point.series.name + ": " + point.y + " " + point.series.yAxis.axisTitle.text;
          }

          return s;
        }
      },
      series: [{}],
      exporting: {
        enabled: false
      }
    });

    init_graph();
  });
<% end %>